
MYNAME="$0";
MYARGS="$*";

. ./common.env
. ./utility.h

usage()
{
cat 1>&2 <<EOF
usage : $MYNAME command

command :
	all ........... make all repository data.
			(archive, env, conf)

	archive ....... setup archive directory
	env ........... make env files for all instance.
	conf .......... make config files for all instance.

	mkpackage ..... make config package for db / batch server 
EOF
}

main()
{
	if [ "$#" -eq 0 ]; then
		usage;
		exit 1;
	fi

	cmd="$1";

	case "$cmd" in
	all | archive | env | conf | clean | mkpackage ) $cmd ;;
	* )
		usage;
		exit 1
		;;
	esac
}

all()
{
	archive;
	env;
	conf;
	./fwctl mkscript;
	mkdbscript;
	mkpackage;
}

env()
{
	log "make all instance environment file into $REPO_DIR";
	./mkenv-all;
}

conf()
{
	log "make all instance config file into $REPO_DIR";
	./mkconf-all;
}

archive()
{
	log "setup $ARCHIVE_DIR";
	if [ ! -s "$ARCHIVE_DIR/app.war" ]
	then
		cp test/testap/app.war $ARCHIVE_DIR;
	fi	
	if [ ! -d "$ARCHIVE_DIR/tomcat-connectors-1.2.42" ]
	then
		cp mod_jk/tomcat-connectors-1.2.42.tar $ARCHIVE_DIR;
		( cd $ARCHIVE_DIR; tar xf tomcat-connectors-1.2.42.tar )
	fi
}

clean()
{
	message "remove $REPO_DIR and $SCRIPT_DIR directory";
	rm -rf $REPO_DIR;
	rm -rf $SCRIPT_DIR;
}

mkdbscript()
{
	log "creaing DB(postgreSQL) script into $DB_SCRIPT_DIR";
	mkdir -p "$DB_SCRIPT_DIR";
	cp ./dbtools/* "$DB_SCRIPT_DIR";
	cp ./common.env "$DB_SCRIPT_DIR/..";
}

mkpackage()
{
	cp ./utility.h "$SCRIPT_DIR";
	cp ./fwctl "$SCRIPT_DIR";
	cp ./usergroupctl "$SCRIPT_DIR";
	cp ./usergroupctl-all "$SCRIPT_DIR";
	( cd "$SCRIPT_DIR"; if [ ! -L $REPO_DIR ]; then ln -s ../$REPO_DIR .; fi; )
	
	mydirname="`basename \`pwd\``";
	log "TAR package for db/batch server setup (package:../$mydirname-package.tar := ($SCRIPT_DIR, $REPO_DIR))"
	tar cf ../$mydirname-package.tar $SCRIPT_DIR $REPO_DIR
}

main $*;

