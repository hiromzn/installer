
MYNAME="$0";
MYARGS="$*";

BASE_ENV="./env.base";

. ./common.env
. ./utility.h

usage()
{
cat <<EOF
usage : $MYNAME <INST_NAME> <number>

exsample of INST_NAME : LXa LEa LJa LVa SDa LXb LJb LVb SDb
exsample of number    :   0   1   2   3   4   5   6   7   8

number is used for port number offset;

EOF
}

main()
{
	iname=$1;
	num=$2;

	NEW_ENV="$REPO_DIR/$iname/env";

	mkdir -p "$NEW_ENV";

	message "creating $iname:$num environment files into $NEW_ENV"

	check_java;

	for envname in os httpd jboss systemctl.jboss systemctl.httpd
	do
		bfile="$BASE_ENV/$envname.env.BASE";
		if [ -s "$bfile" ]
		then
		cat $bfile | \
			case $envname in
			os ) mk_os_env $iname $num ;;
			httpd ) mk_httpd_env $iname $num ;;
			jboss ) mk_jboss_env $iname $num ;;
			systemctl.jboss ) mk_systemctl_env "jboss" $iname $num ;;
			systemctl.httpd ) mk_systemctl_env "httpd" $iname $num ;;
			* ) pr_error "$envname case string is NOT defined in $MYNAME:main()" 1>&2; exit 1;;
			esac >$NEW_ENV/$envname.env
		else
			pr_error "$bfile is NOT exist";
			exit 1;
		fi
	done
}

mk_os_env() # iname num
{
	iname="$1";
	num="$2";

	sed \
		-e 's[__INSTANCE_NAME__['$iname'[g' \
		-e 's[__INSTANCE_NO__['$num'[g' \
		-e 's[__HEADER_SCRIPT__['$MYNAME'[g' \
		-e 's[__HEADER_ARGS__['"$MYARGS"'[g' \
		-e 's[__HEADER_DATE__['`date $DATE_TIME_FMT`'[g' \
		;
}

mk_httpd_env() # iname num
{
	iname="$1";
	num="$2";

	sed \
		-e 's[__INSTANCE_NAME__['$iname'[g' \
		-e 's[__INSTANCE_NO__['$num'[g' \
		-e 's[__HEADER_SCRIPT__['$MYNAME'[g' \
		-e 's[__HEADER_ARGS__['"$MYARGS"'[g' \
		-e 's[__HEADER_DATE__['`date $DATE_TIME_FMT`'[g' \
		;
}

get_java_home() # void
{
	ljava=/etc/alternatives/java
	if [ -s "$ljava" ]; then
		jh="`ls -l $ljava |sed 's/.*-> //' |sed 's[/bin/java[['`";
		echo $jh
	else
		pr_error "Can NOT find out JAVA_HOME directory"
		prstderr "check: "
		prstderr "    $ which java"
		prstderr "    $ ls -l $ljava"
		exit 1;
	fi
}

mk_jboss_env() # iname num
{
	iname="$1";
	num="$2";

	. $NEW_ENV/os.env

	#OFF# jhome="$OS_USER_HOME/opt/\$JBOSS_HOME_NAME";
	#OFF# sname="${iname}A";
	javahome="`get_java_home`";

	poffset="`expr $JOBSS_PORT_OFFSET + $JBOSS_PORT_OFFSET_BASE_OFFSET \* \( $num + 1 \)`";

	pajp="`expr $JBOSS_PORT_AJP_DEF + $poffset`";
	phttp="`expr $JBOSS_PORT_HTTP_DEF + $poffset`";
	phttps="`expr $JBOSS_PORT_HTTPS_DEF + $poffset`";
	pjacorb="`expr $JBOSS_PORT_JACORB_DEF + $poffset`";
	pjacorbs="`expr $JBOSS_PORT_JACORB_SSL_DEF + $poffset`";
	pmessage="`expr $JBOSS_PORT_MESSAGING_DEF + $poffset`";
	ptxnrec="`expr $JBOSS_PORT_TXN_RECOVERY_DEF + $poffset`";
	ptxnst="`expr $JBOSS_PORT_TXN_STATUS_DEF + $poffset`";
	pmanage="`expr $JBOSS_PORT_MANAGE_HTTP_DEF + $poffset`";
	pmanages="`expr $JBOSS_PORT_MANAGE_HTTPS_DEF + $poffset`";

	sed \
		-e 's[__INSTANCE_NAME__['$iname'[g' \
		-e 's[__INSTANCE_NO__['$num'[g' \
		-e 's[__HEADER_SCRIPT__['$MYNAME'[g' \
		-e 's[__HEADER_ARGS__['"$MYARGS"'[g' \
		-e 's[__HEADER_DATE__['`date $DATE_TIME_FMT`'[g' \
		\
		-e 's[__JBOSS_JAVA_HOME__['${javahome}'[g' \
		\
		-e 's[__JBOSS_PORT_OFFSET__['${poffset}'[g' \
		-e 's[__JBOSS_WEB_PORT__['${phttp}'[g' \
		-e 's[__JBOSS_ADMIN_PORT__['${pmanage}'[g' \
		\
		-e 's[__JBOSS_PORT_AJP__['${pajp}'[g' \
		-e 's[__JBOSS_PORT_HTTP__['${phttp}'[g' \
		-e 's[__JBOSS_PORT_HTTPS__['${phttps}'[g' \
		-e 's[__JBOSS_PORT_JACORB__['${pjacorb}'[g' \
		-e 's[__JBOSS_PORT_JACORB_SSL__['${pjacorbs}'[g' \
		-e 's[__JBOSS_PORT_MESSAGING__['${pmessage}'[g' \
		-e 's[__JBOSS_PORT_TXN_RECOVERY__['${ptxnrec}'[g' \
		-e 's[__JBOSS_PORT_TXN_STATUS__['${ptxnst}'[g' \
		-e 's[__JBOSS_PORT_MANAGE_HTTP__['${pmanage}'[g' \
		-e 's[__JBOSS_PORT_MANAGE_HTTPS__['${pmanages}'[g' \
		;
}

mk_systemctl_env() # kind iname num
{
	kind="$1"; # httpd or jboss
	iname="$2";
	num="$3";

 	sed \
		-e 's[__INSTANCE_NAME__['$iname'[g' \
		-e 's[__INSTANCE_NO__['$num'[g' \
		-e 's[__HEADER_SCRIPT__['$MYNAME'[g' \
		-e 's[__HEADER_ARGS__['"$MYARGS"'[g' \
		-e 's[__HEADER_DATE__['`date $DATE_TIME_FMT`'[g' \
		\
		-e 's[__SYSCONFIG_NAME__['${kind}-${iname}'[g' \
		;
}

main $*;

