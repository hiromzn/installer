#
# $Header: /home/hmizuno/opens/CVSrepo/multi_instance/multiapache,v 1.2 2016/12/24 13:31:01 hmizuno Exp $
# $Id: multiapache,v 1.2 2016/12/24 13:31:01 hmizuno Exp $
#

DEBUG=on

. ./env.base/common.env.BASE
. ./common.h

# controle multiple systemctl instance

##############################
#
# cofiguration
#
##############################

#
# service configration file
#
#  ex ) /etc/systemd/system/httpd.service
#
create_servicefile() # kind
{
	kind=$1;
	sfile_base="$confdir/$kind.service";

	if [ -s "$sfile_base" ]; then
		cp $sfile_base $SERVICE_FILE;
	else
		echo "MESSAGE: $sfile_base does NOT exists."
		echo "MESSAGE: skip to create $base:$name service file"
	fi
}

#
# environment configration file
#
#  ex ) /etc/sysconfig/httpd
#
create_sysconfigfile() # kind
{
	kind=$1;
	sconfile=$SYSCONFIG_FILE
	sconfile_base="$confdir/$kind";

	if [ -s "$sconfile_base" ]; then
		cp $sconfile_base $sconfile;
	else
		echo "MESSAGE: $sconfile_base does NOT exists."
		echo "MESSAGE: skip to create $base:$name systemctl config file"
	fi
}

usage()
{
cat <<EOF
controle multiple apache instance

command name : $0

usage : $0 <service_name> command....

service_name :

  service name of systemctl ( httpd / jboss )

command :

  setup:
	setup
	setup -f : force execute
  check:
	check
  clean:
	clean

  do sysctrl command:
  	<cmd> instance_name ( := `get_instance_name_list`)
	<cmd> := start/stop/enable/disable/status

  check all httpd process:
	checkps
EOF
}

do_cmd_instance() # cmd(start/stop/etc...)
{
	cmd="$1";

	sname=$SERVICE_NAME

	echo "MESSAGE : $cmd $target service:$sname"
	echo systemctl $cmd $sname
	systemctl $cmd $sname
}

#####################
#
# main
#
#####################
main()
{
	cmd="$1";
	kind="$2";
	INST_DIR="$3";

	PRODUCT=systemctl.$kind

        . $INST_DIR/env/os.env
        . $INST_DIR/env/$PRODUCT.env

        confdir=$INST_DIR/conf/$PRODUCT

	case "$cmd" in
	##### setup ######
	setup )
		echo "creating $ctltarget : $name instance of systemctl"
		create_sysconfigfile $kind;
		create_servicefile $kind;
		echo "MESSAGE: systemctl daemon-reload"
		systemctl daemon-reload;
		;;

"check" )
	for name in ${INST_LIST[@]}
	do
		echo "##### INSTANCE $name : diff httpd.conf"

		sf=`get_servicefile $ctltarget $name`;
		cf=`get_sysconfigfile $ctltarget $name`;

		if [ $ctltarget = "httpd" ]
		then
			ls -ld $sf;
			ls -ld $cf
			echo "--- check $cf / $sf file"
			grep -e $ctltarget-$name $sf $cf
		else
			ls -ld $sf;
			echo "--- check $sf file"
			grep -e $ctltarget-$name $sf
		fi

	done
	;;

	"clean" )
		rmdir_force $SERVICE_FILE;
		rmdir_force $SYSCONFIG_FILE;
		;;

##### controle process ######
	start | stop | enable | disable | status )
		do_cmd_instance $cmd
		;;
checkps )
	ps -ef |grep httpd
	;;

-? | * )
	usage;
	exit 1;
	;;
esac
}

main $*;

