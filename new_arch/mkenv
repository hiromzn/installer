
MYNAME="$0";
MYARGS="$*";

BASE="./env.base";
NEW="./env";

. $BASE/common*base
. $BASE/rule.env

usage()
{
cat <<EOF
usage : $MYNAME <INST_NAME>

exsample of INST_NAME : LXa LEa LJa LVa SDa LXb LJb LVb SDb

EOF
}

main()
{
	iname=$1;
	num=$2;
	kind=$3;

	for envname in os httpd jboss systemctl
	do
		bfile="$BASE/$envname.env.base";
		if [ -s "$bfile" ]
		then
			cat $bfile | \
			case $envname in
			os ) mk_os_env $iname $num ;;
			httpd ) mk_httpd_env $iname $num ;;
			jboss ) mk_jboss_env $iname $num ;;
			systemctl ) mk_systemctl_env $kind $iname $num ;;
			esac | \
			>
		> $NEW/$envname.env
}

mk_os_env() # iname num
{
	iname="$1";
	num="$2";

	envname=os
	uid="`expr $OS_USER_ID_BASE + $OS_USER_ID_OFFSET \* $num`";
	gid="`expr $OS_GROUP_ID_BASE + $OS_GROUP_ID_OFFSET \* $num`";

	cat $BASE/$envname.env.base | sed \
		-e 's[__HEADER_SCRIPT__['$MYNAME'[g' \
		-e 's[__HEADER_ARGS__['"$MYARGS"'[g' \
		-e 's[__HEADER_DATE__['`date $DATE_TIME_FMT`'[g' \
		-e 's[__OS_USER_NAME__['${iname}OU'[g' \
		-e 's[__OS_USER_ID__['${uid}'[g' \
		-e 's[__OS_GROUP_NAME__['${iname}OG'[g' \
		-e 's[__OS_GROUP_ID__['${gid}'[g' \
		-e 's[__OS_USER_HOME__['/$PROJ_NAME/home/${iname}'[g' \
		> $NEW/$envname.env
}

mk_httpd_env() # iname num
{
	iname="$1";
	num="$2";

	envname=httpd

	. $NEW/os.env

	HTTPD_LISTEN_PORT_BASE=81

	HTTPD_WORKER_SERVER1_PORT_BASE=8109	# DEFAULT + OFFSET
	HTTPD_WORKER_SERVER1_PORT_OFFSET=100

	topdir="$OS_USER_HOME/opt/httpd";
	listenport="`expr $HTTPD_LISTEN_PORT_BASE + $num`";
	workerport="`expr $HTTPD_WORKER_SERVER1_PORT_BASE + $HTTPD_WORKER_SERVER1_PORT_OFFSET \* $num`";

	cat $BASE/$envname.env.base | sed \
		-e 's[__HEADER_SCRIPT__['$MYNAME'[g' \
		-e 's[__HEADER_ARGS__['"$MYARGS"'[g' \
		-e 's[__HEADER_DATE__['`date $DATE_TIME_FMT`'[g' \
		-e 's[__HTTPD_TOPDIR__['${topdir}'[g' \
		-e 's[__HTTPD_LISTEN_PORT__['${listenport}'[g' \
		-e 's[__HTTPD_WORKER_SERVER1_PORT__['${workerport}'[g' \
		> $NEW/$envname.env
}

get_java_home() # void
{
	ljava=/etc/alternatives/java
	if [ -s "$ljava" ]; then
		jh="`ls -l $ljava |sed 's/.*-> //' |sed 's[/bin/java[['`";
		echo $jh
	else
		echo "ERROR: can NOT find out JAVA_HOME directory"
		echo "check: "
		echo "    $ which java"
		echo "    $ ls -l $ljava"
		exit 1;
	fi
}

mk_jboss_env() # iname num
{
	iname="$1";
	num="$2";

	envname=jboss

	. $NEW/os.env

	HTTPD_LISTEN_PORT_BASE=81

	jhome="$OS_USER_HOME/opt/\$JBOSS_HOME_NAME";
	sname="${iname}A";
	javahome="`get_java_home`";

	JBOSS_PORT_OFFSET_BASE_OFFSET=100

	JBOSS_WEB_PORT_BASE=8080
	JBOSS_ADMIN_PORT_BASE=9990

	portoffset="`expr $JBOSS_PORT_OFFSET_BASE_OFFSET \* \( $num + 1 \)`";
	webport="`expr $JBOSS_WEB_PORT_BASE + $portoffset`";
	adminport="`expr $JBOSS_ADMIN_PORT_BASE + $portoffset`";

	JBOSS_DS_SERVER_NAME="127.0.0.1";

	cat $BASE/$envname.env.base | sed \
		-e 's[__HEADER_SCRIPT__['$MYNAME'[g' \
		-e 's[__HEADER_ARGS__['"$MYARGS"'[g' \
		-e 's[__HEADER_DATE__['`date $DATE_TIME_FMT`'[g' \
		\
		-e 's[__JBOSS_HOME__['${jhome}'[g' \
		-e 's[__JBOSS_SERVER_NAME__['${sname}'[g' \
		-e 's[__JBOSS_JAVA_HOME__['${javahome}'[g' \
		\
		-e 's[__JBOSS_PORT_OFFSET__['${portoffset}'[g' \
		-e 's[__JBOSS_WEB_PORT__['${webport}'[g' \
		-e 's[__JBOSS_ADMIN_PORT__['${adminport}'[g' \
		\
		-e 's[__JBOSS_USER__['${iname}AU'[g' \
		-e 's[__JBOSS_GROUP__['${iname}AG'[g' \
		\
		-e 's[__JBOSS_DS_NAME__['${iname}DS'[g' \
		-e 's[__JBOSS_DS_SERVER_NAME__['${JBOSS_DS_SERVER_NAME}'[g' \
		-e 's[__JBOSS_DS_DB_NAME__['${iname}DB'[g' \
		-e 's[__JBOSS_DS_USER_NAME__['${iname}DU'[g' \
		> $NEW/$envname.env
}

mk_systemctl_env() # kind iname num
{
	kind="$1"; # httpd or jboss
	iname="$2";
	num="$3";

	envname=systemctl
	
	cat $BASE/$envname.env.base |\
 		sed \
		-e 's[__HEADER_SCRIPT__['$MYNAME'[g' \
		-e 's[__HEADER_ARGS__['"$MYARGS"'[g' \
		-e 's[__HEADER_DATE__['`date $DATE_TIME_FMT`'[g' \
		\
		-e 's[__SYSCONFIG_NAME__['${kind}-${iname}'[g' \
		> $NEW/$envname.env
}

main $*;

