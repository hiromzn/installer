#
# sysctl : systemd controle
#
# controle multiple systemctl instance
#

. ./common.env
. ./utility.h

usage()
{
cat <<EOF
usage : $0 command service <instance_directory>

service :

  service name of systemctl ( httpd / jboss )

command :
  	setup 	..... setup service
  	clean	..... cleanup service definition

  	check

  	start | stop | enable | disable | status
  		you can user these systemctl commands.

	checkps	..... check all httpd or jboss process:

instance_directory :
	directory for instance repository
	ex:) $REPO_DIR/<instance_name>
  	ex:) instance_name ( := $INSTANCE_LIST )
EOF
}

#####################
#
# main
#
#####################
main()
{
	cmd="$1";
	kind="$2";
	INST_DIR="$3";

	PRODUCT=systemctl.$kind

        envfile="$INST_DIR/env/os.env";

        if [ ! -s "$envfile" ]; then
                pr_error "invalid envfile ($envfile)"
                pr_error "check instance directory or envfile"
                pr_error "instance directory is : $INST_DIR";
                usage;
                exit 1;
        fi

        . $envfile
        . $INST_DIR/env/$PRODUCT.env

        confdir=$INST_DIR/conf/$PRODUCT

	case "$cmd" in
	setup )
		log "creating $kind instance of systemctl : $confdir"
		create_sysconfigfile $kind;
		create_servicefile $kind;
		message "systemctl daemon-reload"
		systemctl daemon-reload;
		;;

	clean )
		rmdir_force $SERVICE_FILE;
		rmdir_force $SYSCONFIG_FILE;
		;;

	check )
		ls -l $SYSCONFIG_FILE
		ls -l $SERVICE_FILE
		;;

	start | stop | enable | disable | status )
		do_cmd_instance $cmd
		;;

	checkps )
		message "check $kind process"
		ps -ef |grep $kind
		;;

	-? | * )
		usage;
		exit 1;
		;;
	esac
}

##############################
#
# cofiguration
#
##############################

#
# service configration file
#
#  ex ) /etc/systemd/system/httpd.service
#
create_servicefile() # kind
{
	kind=$1;
	sfile_base="$confdir/$kind.service";

	if [ -s "$sfile_base" ]; then
		cp $sfile_base $SERVICE_FILE;
	else
		pr_error "$sfile_base does NOT exists."
		exit 1;
	fi
}

#
# environment configration file
#
#  ex ) /etc/sysconfig/httpd
#
create_sysconfigfile() # kind
{
	kind=$1;
	sconfile=$SYSCONFIG_FILE
	sconfile_base="$confdir/$kind";

	if [ -s "$sconfile_base" ]; then
		cp $sconfile_base $sconfile;
	else
		debug "DEBUG: skip to create $kind systemctl config file"
	fi
}

do_cmd_instance() # cmd(start/stop/etc...)
{
	cmd="$1";

	sname=$SERVICE_NAME

	log "[sysctl] run systemctl $cmd $sname"
	systemctl $cmd $sname
}


main $*;

