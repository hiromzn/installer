#
# httpdctl : httpd controle
#
# controle multiple apache instance
#
. ./common.env
. ./utility.h

HTTPD_ORG_TOPDIR=/etc/httpd
HTTPD_ORG_MODULES_ABS_DIR=/usr/lib64/httpd/modules

usage()
{
cat <<EOF

usage : $0 command <instance_definition_top_dir>

command :
        setup ......... setup all config.
        clean ......... clean all config.

        fwsetup ....... setup firewall configuration file.
        fwclean ....... delete firewall configuration file.
        check ......... check all configuration.
        checkps ....... check all httpd process.

<instance_definition_top_dir> has:
	./env  ...... environment variable file
	./conf ...... config file
EOF
}

#####################
#
# main
#
#####################
main()
{
	cmd="$1";
	INST_DIR="$2";
	PRODUCT="httpd";

        envfile="$INST_DIR/env/os.env";

        if [ ! -s "$envfile" ]; then
                pr_error "invalid envfile ($envfile)"
                pr_error "check instance directory or envfile"
                pr_error "instance directory is : $INST_DIR";
                usage;
                exit 1;
        fi

        . $envfile
	. $INST_DIR/env/$PRODUCT.env

	case "$cmd" in
	setup ) setup $INST_DIR ;;

	fwsetup ) fwsetup $INST_DIR ;;
	fwclean ) fwclean ;;

	check )
		for n in ${INST_LIST[@]}
		do
			echo "##### instance name $n : diff httpd.conf"

			ls -ld `get_httpd_topdir $n`;
			ls -ld `get_httpd_logdir_abs $n`;
			ls -ld `get_httpd_rundir_abs $n`;
			wwwroot="`get_httpd_wwwroot $n`";
			ls -ld $wwwroot
			ls -ld $wwwroot/*

			echo "--- check $HTTPD_ORG_TOPDIR-$n/conf/httpd.conf"
			grep -e ^ServerRoot -e ^Document -e ^Listen -e ^PidFile -e ^DefaultRuntimeDir $HTTPD_ORG_TOPDIR-$n/conf/httpd.conf
		done
		;;
	clean )
		clean_all;
		;;

	checkps )
		ps -ef |grep httpd
		;;

	-? | * )
		usage;
		exit 1;
		;;
	esac
}

clean_all()
{
	message "CLEANING: httpd instance $INST_DIR"
	fwclean;
	rmdir_force $HTTPD_TOPDIR;
}

get_apache_version()
{
	if [ -d "$HTTPD_ORG_TOPDIR/conf.modules.d" ]; then
		echo "2.4";
	else
		echo "2.2";
	fi
}

install_mod_jk()
{
        modjkpath=$HTTPD_MOD_JK_PATH
        bin=$ARCHIVE_DIR/tomcat-connectors-1.2.42/native/apache-2.0/mod_jk.so 

        if [ -s "$bin" ]; then
                log "installing $bin to $modjkpath"
                cp $bin $modjkpath
                chmod 755 $modjkpath
                chown $OS_USER_NAME:$OS_GROUP_NAME $modjkpath
        else
                pr_error "check $bin file...."
        fi
}

setup_welcomepage_for_test() # confdir
{
	confdir=$1;
	src=$confdir/index_test.html
	if [ -s "$src" ]; then
		target="$HTTPD_DOC_ROOT/index.html";
		cp $src $target
		chown $OS_USER_NAME:$OS_GROUP_NAME $target
		chmod 644 $target
	else
		error "setup_welcomepage_for_test(): no $src : check this file."
	fi
}

#
# firewall
#
fwsetup() # instdir
{
	instdir="$1";
	confdir=$instdir/conf/$PRODUCT

	cp $confdir/http.xml $FIREWALL_CONF_DIR/$HTTPD_FW_CONF_HTTP_NAME.xml
	#OFF# cp $confdir/https.xml $FIREWALL_CONF_DIR/$HTTPD_FW_CONF_HTTPS_NAME.xml
}

fwclean()
{
	rm -f $FIREWALL_CONF_DIR/$HTTPD_FW_CONF_HTTP_NAME.xml
}

setup() # instdir
{
	instdir="$1";
	echo "setup $PRODUCT by $instdir"

  # HTTPD_TOPDIR : cleanup and create
	mk_base_dir $HTTPD_TOPDIR;
	rm -rf $HTTPD_TOPDIR; # remove old directory
	cp -rp $HTTPD_ORG_TOPDIR $HTTPD_TOPDIR
	chown -R $OS_USER_NAME:$OS_GROUP_NAME $HTTPD_TOPDIR

  # config file
	confdir=$instdir/conf/$PRODUCT

	cp $confdir/httpd.conf $HTTPD_CONF_FILE
	cp $confdir/custom.conf $HTTPD_CONF_CUSTOM
	cp $confdir/mod_jk.conf $HTTPD_CONF_MODJK
	cp $confdir/workers.properties $HTTPD_CONF_WORKERS

	for f in $HTTPD_CONF_FILE $HTTPD_CONF_CUSTOM $HTTPD_CONF_MODJK $HTTPD_CONF_WORKERS
	do
		chown $OS_USER_NAME:$OS_GROUP_NAME $f;
		chmod $HTTPD_CONF_FILE_MOD $f;
	done

	# firewall
	fwsetup $instdir;

  # REMOVE SSL config
	sslconf="$HTTPD_CONFD/ssl.conf";
	if [ -s "$sslconf" ];
	then
		echo "CAUTION : $sslconf file was ignored !"
		echo "        mv $sslconf $sslconf.__OFF__"
		mv $sslconf $sslconf.__OFF__
	fi

  # logs dir
	rm -f $HTTPD_LOG_DIR; # remove symbolic link
	create_dir $HTTPD_LOG_DIR \
		$OS_USER_NAME \
		$OS_GROUP_NAME \
		$HTTPD_LOG_DIR_MOD;

  # run dir
	rm -f $HTTPD_RUN_DIR; # remove symbolic link
	create_dir $HTTPD_RUN_DIR \
		$OS_USER_NAME \
		$OS_GROUP_NAME \
		$HTTPD_RUN_DIR_MOD;

  # modules dir
	rm -f $HTTPD_MODULES_DIR
	cp -r $HTTPD_ORG_MODULES_ABS_DIR $HTTPD_MODULES_DIR
	chown -R $OS_USER_NAME:$OS_GROUP_NAME $HTTPD_MODULES_DIR

	install_mod_jk;

  # www dir
	create_dir $HTTPD_WWW_ROOT \
		$OS_USER_NAME \
		$OS_GROUP_NAME \
		$HTTPD_WWW_ROOT_MOD;

  # docroot dir
	create_dir $HTTPD_DOC_ROOT \
		$OS_USER_NAME \
		$OS_GROUP_NAME \
		$HTTPD_DOC_ROOT_MOD;
	setup_welcomepage_for_test $confdir;

  # cgiroot dir
	create_dir $HTTPD_CGI_ROOT \
		$OS_USER_NAME \
		$OS_GROUP_NAME \
		$HTTPD_CGI_ROOT_MOD;
}

main $*;

