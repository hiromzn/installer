#
# fwctl : firewall control
#

MYNAME="$0";
MYARGS="$*";

. ./common.env
. ./utility.h

FW_CMD="firewall-cmd";
FW_CMD_OPT="--zone=public";

usage()
{
cat <<EOF

usage: $0 command [service_name]

command:
	add <service_name>
	remove <service_name>

	mkscript .... create firewall scripts into $FW_SCRIPT_DIR

			fw.{http | jboss}-all.{add | remove}.sh
			fw.{ap | db | common}.{add | remove}.sh

	reload ...... reload service

	list ........ list all
	lists ....... list services
	listp ....... list ports
	listdir ..... list firewall service directory.
EOF
}

main()
{
	cmd="$1";
	service="$2";

	case "$cmd" in

	mkscript ) mkscript ;;
	clean ) clean ;;

	reload ) $FW_CMD --reload ;;

	list ) $FW_CMD --list-all $FIREWALL_CMD_OPT ;;
	listp ) $FW_CMD --list-ports $FIREWALL_CMD_OPT ;;
	lists ) $FW_CMD --list-services $FIREWALL_CMD_OPT ;;
	listdir )
		ls -l /etc/firewalld/services/
		;;
	add | remove )
		message "firewall command:$cmd service:$service";
		$FW_CMD --$cmd-service=$service $FIREWALL_CMD_OPT
		$FW_CMD --$cmd-service=$service $FIREWALL_CMD_OPT --permanent
		;;
	* )
		pr_error "bad commnad : $cmd";
		usage;
		exit 1;
		;;
	esac
}

mkscript()
{
	make_firewall_script http;
	make_firewall_script jboss;
	make_script ap $FIREWALL_BASE_CONF_AP
        make_script db $FIREWALL_BASE_CONF_DB
        make_script common $FIREWALL_BASE_CONF_COMMON
}

clean()
{
	rm -rf $FW_SCRIPT_DIR;
}

make_script() # server_kind service_list...
{
        log "creating firewall config script for $1 server into $FW_SCRIPT_DIR";
        mkdir -p "$FW_SCRIPT_DIR";
        create_firewall_conf_script "add" $*
        create_firewall_conf_script "remove" $*
}

make_firewall_script() # kind
{
	kind="$1";
	list="";
	for d in $REPO_DIR/*;
	do
		list="$list $kind-`basename $d`";
		if [ "$kind" = "http" ]; then
			# comment out if you use SSL/TLS.
			# list="$list https-`basename $d`";
			:
		fi
	done
	log "creating $kind firewall script : $list";
	create_firewall_conf_script "add" $kind-all $list;
	create_firewall_conf_script "remove" $kind-all $list;
}

create_firewall_conf_script() # cmd server_kind service_list...
{
	cmd="$1";
	skind="$2";
	shift; shift;
	list="$*";

	mkdir -p $FW_SCRIPT_DIR;

	(
	echo "$FW_CMD --reload";
	for confname in $list
	do
		echo $FW_CMD --$cmd-service=$confname $FW_CMD_OPT
		echo $FW_CMD --$cmd-service=$confname $FW_CMD_OPT --permanent
	done )>$FW_SCRIPT_DIR/fw.$skind.$cmd.sh
	chmod 755 $FW_SCRIPT_DIR/fw.$skind.$cmd.sh
}

#####
##### Please run by root user !!!!!!
#####
check_conf_file() # confname
{
	confname="$1";
	conffilesys="$FIREWALL_BASE_CONF_DIR/$confname.xml"
	if [ ! -s "$conffilesys" ]
	then
		conffilelocal="$FIREWALL_CONF_DIR/$confname.xml"
		if [ ! -s "$conffilelocal" ]
		then
			pr_error "firewall config name:$confname is invalid!"
			prstderr "        check $conffilesys or $conffilelocal file."
			exit 1;
		fi
	fi
}

main $*;
